[{"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\getDaysUntil.js":"1","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\ProductDetail.jsx":"2","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\assets\\styles\\index.js":"3","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\dbController.js":"4","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\reducers\\authReducer.js":"5","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\components\\shared\\Textarea.component.jsx":"6","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\formatPrice.js":"7","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\components\\ProductCard\\index.jsx":"8","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\App.jsx":"9","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\ProductsList.jsx":"10","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\components\\routes\\ProtectedRoute.component.jsx":"11","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\reducers\\index.js":"12","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\index.js":"13","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\reducers\\productsReducer.js":"14","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\actions\\actionTypes.js":"15","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\SignIn.jsx":"16","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\getNumberWithSale.js":"17","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\RootRouter.jsx":"18","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\SignUp.jsx":"19","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\actions\\authActions.js":"20"},{"size":289,"mtime":1607810596226,"results":"21","hashOfConfig":"22"},{"size":9220,"mtime":1608062086676,"results":"23","hashOfConfig":"22"},{"size":646,"mtime":1607778043708,"results":"24","hashOfConfig":"22"},{"size":455,"mtime":1607797557448,"results":"25","hashOfConfig":"22"},{"size":1257,"mtime":1607804241341,"results":"26","hashOfConfig":"22"},{"size":964,"mtime":1607810275838,"results":"27","hashOfConfig":"22"},{"size":142,"mtime":1607777034811,"results":"28","hashOfConfig":"22"},{"size":3809,"mtime":1608061546144,"results":"29","hashOfConfig":"22"},{"size":152,"mtime":1607759220733,"results":"30","hashOfConfig":"22"},{"size":2665,"mtime":1607804976507,"results":"31","hashOfConfig":"22"},{"size":531,"mtime":1607759100723,"results":"32","hashOfConfig":"22"},{"size":244,"mtime":1607725612190,"results":"33","hashOfConfig":"22"},{"size":130,"mtime":1607805740357,"results":"34","hashOfConfig":"22"},{"size":1244,"mtime":1607808210365,"results":"35","hashOfConfig":"22"},{"size":724,"mtime":1607804532286,"results":"36","hashOfConfig":"22"},{"size":2838,"mtime":1608062339217,"results":"37","hashOfConfig":"22"},{"size":85,"mtime":1607788225573,"results":"38","hashOfConfig":"22"},{"size":1896,"mtime":1608062165324,"results":"39","hashOfConfig":"22"},{"size":3514,"mtime":1608064076524,"results":"40","hashOfConfig":"22"},{"size":1684,"mtime":1608064322647,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tlibz",{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\getDaysUntil.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\ProductDetail.jsx",["85"],"import {Button, Container} from '../assets/styles';\r\nimport React,{useCallback, useEffect, useState} from 'react'\r\nimport {createProduct, updateProduct} from '../store/actions/productsAction'\r\nimport {useHistory, useParams} from 'react-router-dom'\r\n\r\nimport {ReactComponent as ArrowLeft} from '../assets/icons/leftArrow.svg'\r\nimport DBController from '../utils/dbController';\r\nimport InputField from '../components/shared/InputField.component';\r\nimport Textarea from '../components/shared/Textarea.component';\r\nimport {storage} from '../utils';\r\nimport styled from 'styled-components';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nfunction ProductDetail() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        title: '',\r\n        image: '',\r\n        description: '',\r\n        price: 0,\r\n        sale: 0,\r\n        saleEndDate: ''\r\n    });\r\n    \r\n    const d = new Date(Date.now());\r\n    d.setDate(new Date().getDate() + 1);\r\n    const minDate = new Date(d.getTime() - d.getTimezoneOffset() * 120 * 1000).toISOString().split('T')[0];\r\n\r\n    const [errors, setErrors] = useState({});\r\n    \r\n    const handleChange = useCallback((e) => {\r\n        const target = e.target;\r\n\r\n        const value = target.value;\r\n        \r\n        if(target.type === 'file') {\r\n            const MIN_SIZE = 200;\r\n            const MAX_SIZE = 4000;\r\n\r\n            const file = target.files[0];\r\n            const img = new Image();\r\n\r\n            img.src = window.URL.createObjectURL(file);\r\n            img.onload = async () => {\r\n                if((img.height < MIN_SIZE || img.height > MAX_SIZE) || (img.width < MIN_SIZE || img.width > MAX_SIZE)) {\r\n                    setErrors({...errors,image: 'File\\'s size should be between 200px or 4000px'});\r\n                    return;\r\n                } else {\r\n                    const fileRef = storage.child(file.name);\r\n                    await fileRef.put(file); \r\n                    const fileUrl = await fileRef.getDownloadURL();\r\n                    \r\n                    setErrors({...errors, image: null});\r\n                    setFormValue({\r\n                        ...formValue,\r\n                        [target.name]: fileUrl\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            return;\r\n        }\r\n\r\n        setFormValue({\r\n            ...formValue,\r\n            [target.name]: value\r\n        });\r\n\r\n    },[formValue])\r\n    \r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        const errorsQuantity = validateValues(formValue);\r\n\r\n        if(errorsQuantity === 0 && !errors.image) {\r\n            params.id? dispatch(updateProduct(formValue)) : dispatch(createProduct(formValue));\r\n        }\r\n\r\n    },[formValue,dispatch,params,errors]);\r\n    \r\n    useEffect(() => {\r\n        if(params.id) {\r\n            const handleProduct = (product) => {\r\n                const id = product.key;\r\n                const data = product.val();\r\n                \r\n                setFormValue({\r\n                    id,\r\n                    ...data\r\n                });\r\n            }\r\n            \r\n            DBController.getProduct(params.id).on(\"value\",handleProduct);\r\n        }\r\n    },[params]);\r\n    \r\n    const validateValues = (formValue) => {\r\n        let errorsObj = {};\r\n\r\n        Object.entries(formValue).forEach(([key,value]) => {\r\n            if(key === 'title') {\r\n                value.length <= 20 && (errorsObj.title = \"Should be between 20 and 60\");\r\n            } else if(key === 'price') {\r\n                value >= 99999999.99 && (errorsObj.price = 'Price Should be less than 99999999.99');\r\n                // max='9999999999'\r\n            } else if(key === 'image') {\r\n                value.length === 0 && (errorsObj.image = \"Image required\");\r\n            } else if(key === 'price') {\r\n                value < 1 && (errorsObj.price = \"Price required\");\r\n            } else if(key === 'saleEndDate') {\r\n                formValue.sale > 1 && value.length === 0 && (errorsObj.saleEndDate = \"Sale End Day Required\"); \r\n            }\r\n        });\r\n\r\n        setErrors(errorsObj);\r\n\r\n        return Object.values(errorsObj).length;\r\n    }\r\n    \r\n    return (\r\n        <Container>\r\n            <FormContainer>\r\n                <Form onSubmit={onSubmit}>\r\n                    <FormBack type='button' onClick={() => history.goBack()}>\r\n                      <ArrowLeft></ArrowLeft>  Back\r\n                    </FormBack>\r\n\r\n                    <FormRow>\r\n                        <FormCol>\r\n                            <InputField\r\n                                name='title'\r\n                                label=\"Title*\"\r\n                                type='text'\r\n                                value={formValue.title}\r\n                                onChange={handleChange}\r\n                                errors={errors}\r\n                            ></InputField>\r\n                        </FormCol>\r\n                        <FormCol>\r\n                            <InputField\r\n                                name='image'\r\n                                label=\"Image*\"\r\n                                type='file'\r\n                                onChange={handleChange}\r\n                                errors={errors}\r\n                            ></InputField>\r\n                            {formValue.image.length !== 0 && (\r\n                                <img style={{height: '50px',width: '50px'}} src={formValue.image} alt='product'></img>\r\n                            )}\r\n                        </FormCol>\r\n                    </FormRow>\r\n                    \r\n                    <FormRow>\r\n                        <Textarea\r\n                            name='description'\r\n                            label=\"Description\"\r\n                            value={formValue.description}\r\n                            onChange={handleChange}\r\n                            errors={errors}\r\n                            maxLength='200'\r\n                        ></Textarea>\r\n                        <Remark>Symbols left {200 - formValue.description.length}</Remark>\r\n                    </FormRow>\r\n\r\n                    <FormRow>\r\n                        <FormCol>\r\n                            <InputField\r\n                                name='price'\r\n                                label=\"Price*\"\r\n                                type='number'\r\n                                value={formValue.price}\r\n                                onChange={handleChange}\r\n                                errors={errors}\r\n                     \r\n                                min='0'\r\n                            ></InputField>\r\n                        </FormCol>\r\n                        <FormCol>\r\n                            <InputField\r\n                                name='sale'\r\n                                label=\"Sale\"\r\n                                type='number'\r\n                                value={formValue.sale}\r\n                                onChange={handleChange}\r\n                                errors={errors}\r\n                                min='0'\r\n                                max='100'\r\n                            ></InputField>\r\n                        </FormCol>\r\n                    </FormRow>\r\n\r\n                    <InputField\r\n                        name='saleEndDate'\r\n                        label=\"Sale End Date\"\r\n                        type='date'\r\n                        value={formValue.saleEndDate}\r\n                        onChange={handleChange}\r\n                        errors={errors}\r\n                        disabled={+formValue.sale === 0}\r\n                        min={minDate}\r\n                    ></InputField>\r\n\r\n                    <SubmitBtn type='submit'>\r\n                        {params.id? 'Update Product' : 'Add Product'} \r\n                    </SubmitBtn>\r\n                </Form>\r\n            </FormContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nconst FormContainer = styled.div`\r\n    background: #fff;\r\n    max-width: 768px;\r\n    height: 100%;\r\n    border-radius: 8px;\r\n    border: 1px solid #ccc;\r\n`\r\n\r\nconst FormCol = styled.div`\r\n    min-width: 320px;\r\n    height: 100%;\r\n    padding: 0 5px;\r\n`\r\n\r\nconst FormRow = styled.div`\r\n    position:relative;\r\n    width: 100%;\r\n    height: 100%;\r\n\r\n    display:flex;\r\n    flex-flow: row wrap;\r\n`\r\n\r\nconst Remark = styled.span`\r\n    position:absolute;\r\n    bottom: -5px;\r\n    right: 0px;\r\n    color: #ccc;\r\n    text-transform: capitalize;\r\n`\r\n\r\nconst FormBack = styled(Button)`\r\n    position:absolute;\r\n    top: 10px;\r\n    left: 5px;\r\n    font-size: 1.2rem;\r\n\r\n    display: flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n\r\n    svg {\r\n        height: 20px;\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nconst Form = styled.form`\r\n    height: 100%;\r\n    width: 100%;\r\n    position:relative;\r\n    padding: 20px;\r\n    padding-top: 40px;\r\n`\r\n\r\nconst SubmitBtn = styled(Button)`\r\n    background: purple;\r\n    padding: 20px;\r\n    color: #fff;\r\n    margin-top: 50px;\r\n    width: 100%;\r\n    border-radius: 8px;\r\n    font-size: 20px;\r\n`\r\n\r\nexport default ProductDetail\r\n","C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\assets\\styles\\index.js",[],["86","87"],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\dbController.js",[],["88","89"],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\reducers\\authReducer.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\components\\shared\\Textarea.component.jsx",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\formatPrice.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\components\\ProductCard\\index.jsx",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\App.jsx",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\ProductsList.jsx",["90"],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\components\\routes\\ProtectedRoute.component.jsx",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\reducers\\index.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\index.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\reducers\\productsReducer.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\SignIn.jsx",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\utils\\getNumberWithSale.js",[],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\RootRouter.jsx",["91"],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\layouts\\SignUp.jsx",["92"],"C:\\Users\\User\\Desktop\\ReactRedux\\cleveroad_test\\src\\store\\actions\\authActions.js",[],{"ruleId":"93","severity":1,"message":"94","line":71,"column":7,"nodeType":"95","endLine":71,"endColumn":18,"suggestions":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"99","replacedBy":"102"},{"ruleId":"93","severity":1,"message":"103","line":37,"column":7,"nodeType":"95","endLine":37,"endColumn":9,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":10,"column":9,"nodeType":"107","messageId":"108","endLine":10,"endColumn":13},{"ruleId":"105","severity":1,"message":"109","line":1,"column":13,"nodeType":"107","messageId":"108","endLine":1,"endColumn":24},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'errors'. Either include it or remove the dependency array. You can also do a functional update 'setErrors(e => ...)' if you only need 'errors' in the 'setErrors' call.","ArrayExpression",["110"],"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["113"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'actionTypes' is defined but never used.",{"desc":"114","fix":"115"},"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [errors, formValue]",{"range":"118","text":"119"},"Update the dependencies array to be: [dispatch]",{"range":"120","text":"121"},[2504,2515],"[errors, formValue]",[1211,1213],"[dispatch]"]